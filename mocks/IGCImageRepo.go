// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IGCImageRepo is an autogenerated mock type for the IGCImageRepo type
type IGCImageRepo struct {
	mock.Mock
}

// DeleteFile provides a mock function with given fields: ctx, routeSprintf, name
func (_m *IGCImageRepo) DeleteFile(ctx context.Context, routeSprintf string, name string) error {
	ret := _m.Called(ctx, routeSprintf, name)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, routeSprintf, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetFile provides a mock function with given fields: ctx, field, routeSprintf
func (_m *IGCImageRepo) SetFile(ctx context.Context, field string, routeSprintf string) (string, error) {
	ret := _m.Called(ctx, field, routeSprintf)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (string, error)); ok {
		return rf(ctx, field, routeSprintf)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) string); ok {
		r0 = rf(ctx, field, routeSprintf)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, field, routeSprintf)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIGCImageRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewIGCImageRepo creates a new instance of IGCImageRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIGCImageRepo(t mockConstructorTestingTNewIGCImageRepo) *IGCImageRepo {
	mock := &IGCImageRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
